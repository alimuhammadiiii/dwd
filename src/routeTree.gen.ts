/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PortfolioRouteImport } from './routes/portfolio'
import { Route as GetInTouchRouteImport } from './routes/getInTouch'
import { Route as ArticleRouteImport } from './routes/article'
import { Route as AboutUsRouteImport } from './routes/aboutUs'
import { Route as FaQRouteImport } from './routes/FaQ'
import { Route as IndexRouteImport } from './routes/index'

const PortfolioRoute = PortfolioRouteImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => rootRouteImport,
} as any)
const GetInTouchRoute = GetInTouchRouteImport.update({
  id: '/getInTouch',
  path: '/getInTouch',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticleRoute = ArticleRouteImport.update({
  id: '/article',
  path: '/article',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutUsRoute = AboutUsRouteImport.update({
  id: '/aboutUs',
  path: '/aboutUs',
  getParentRoute: () => rootRouteImport,
} as any)
const FaQRoute = FaQRouteImport.update({
  id: '/FaQ',
  path: '/FaQ',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/FaQ': typeof FaQRoute
  '/aboutUs': typeof AboutUsRoute
  '/article': typeof ArticleRoute
  '/getInTouch': typeof GetInTouchRoute
  '/portfolio': typeof PortfolioRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/FaQ': typeof FaQRoute
  '/aboutUs': typeof AboutUsRoute
  '/article': typeof ArticleRoute
  '/getInTouch': typeof GetInTouchRoute
  '/portfolio': typeof PortfolioRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/FaQ': typeof FaQRoute
  '/aboutUs': typeof AboutUsRoute
  '/article': typeof ArticleRoute
  '/getInTouch': typeof GetInTouchRoute
  '/portfolio': typeof PortfolioRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/FaQ'
    | '/aboutUs'
    | '/article'
    | '/getInTouch'
    | '/portfolio'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/FaQ' | '/aboutUs' | '/article' | '/getInTouch' | '/portfolio'
  id:
    | '__root__'
    | '/'
    | '/FaQ'
    | '/aboutUs'
    | '/article'
    | '/getInTouch'
    | '/portfolio'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FaQRoute: typeof FaQRoute
  AboutUsRoute: typeof AboutUsRoute
  ArticleRoute: typeof ArticleRoute
  GetInTouchRoute: typeof GetInTouchRoute
  PortfolioRoute: typeof PortfolioRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/portfolio': {
      id: '/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/getInTouch': {
      id: '/getInTouch'
      path: '/getInTouch'
      fullPath: '/getInTouch'
      preLoaderRoute: typeof GetInTouchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/article': {
      id: '/article'
      path: '/article'
      fullPath: '/article'
      preLoaderRoute: typeof ArticleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aboutUs': {
      id: '/aboutUs'
      path: '/aboutUs'
      fullPath: '/aboutUs'
      preLoaderRoute: typeof AboutUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/FaQ': {
      id: '/FaQ'
      path: '/FaQ'
      fullPath: '/FaQ'
      preLoaderRoute: typeof FaQRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FaQRoute: FaQRoute,
  AboutUsRoute: AboutUsRoute,
  ArticleRoute: ArticleRoute,
  GetInTouchRoute: GetInTouchRoute,
  PortfolioRoute: PortfolioRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
